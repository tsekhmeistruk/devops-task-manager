name: OWASP ZAP Scan

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/zap.yml"

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3

      - name: Set up Docker Compose
        run: docker compose version

      - name: Create .env file from secrets
        run: |
          echo "PORT=3000" >> .env
          echo "MONGODB_URI=mongodb://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASS }}@mongodb:27017/testdb?authSource=admin" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_PASS }}" >> .env

      - name: Start target with Docker Compose
        run: docker compose up -d --build

      - name: Wait for backend and frontend
        run: |
          for i in {1..20}; do
            curl -sf http://localhost:3000/tasks && curl -sf http://localhost:5173 && break || sleep 3
          done

      - name: Prepare directory for ZAP results
        run: mkdir -p zap-results

      - name: ZAP Scan - Backend API
        run: |
          docker run --network host \
            -v $(pwd)/zap-results:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:3000 -r /zap-backend.html || true

      - name: ZAP Scan - Frontend UI
        run: |
          docker run --network host \
            -v $(pwd)/zap-results:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:5173 -r /zap-frontend.html || true

      - name: Upload ZAP HTML Reports
        uses: actions/upload-artifact@v4.6.2
        with:
          name: zap-reports
          path: zap-results/
          retention-days: 7

      - name: Tear down services
        run: docker compose down -v
